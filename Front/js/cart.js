// T·∫£i s·∫£n ph·∫©m khi trang ƒë∆∞·ª£c t·∫£i
document.addEventListener("DOMContentLoaded",function(){
    LoadUser();
    document.getElementById("logout-Button").addEventListener("click", logoutUser);
    // Th√™m s·ª± ki·ªán click v√†o gi·ªè h√†ng
    const cartContainer = document.getElementById("cart-container");
    const cartList = document.getElementById("cart-list");

    // Hi·ªán gi·ªè h√†ng khi r√™ chu·ªôt v√†o
    cartContainer.addEventListener("mouseenter", function () {
        cartList.classList.remove("hidden");
    });

    // ·∫®n gi·ªè h√†ng khi r·ªùi chu·ªôt
    cartContainer.addEventListener("mouseleave", function () {
        cartList.classList.add("hidden");
    });

    loadCartItems();
});


function LoadUser() {
    const user = localStorage.getItem("user");
    if (user) {
        const userData = JSON.parse(user); // Chuy·ªÉn chu·ªói JSON th√†nh object
        console.log(userData);

        // Hi·ªÉn th·ªã th√¥ng tin user
        document.getElementById("user-id").innerText = ` ${userData.userID}`;
        document.getElementById("user-name").innerText = `| ${userData.fullName}`;
        


        // ·∫®n n√∫t "ƒêƒÉng nh·∫≠p", hi·ªÉn th·ªã th√¥ng tin user
        document.getElementById("login-Button").style.display = "none";
        document.getElementById("user-info").style.display = "block";
    } else {
        // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, hi·ªÉn th·ªã "ƒêƒÉng nh·∫≠p"
        document.getElementById("login-Button").style.display = "block";
        document.getElementById("user-info").style.display = "none";
    }
}


function logoutUser() {
    console.log("Ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng xu·∫•t!");
    
    // X√≥a th√¥ng tin ƒëƒÉng nh·∫≠p trong localStorage
    localStorage.clear();
    localStorage.removeItem("token");

    // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
    window.location.href = "login.html";
}

// L·∫•y danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng c·ªßa user
async function loadCartItems() {
    const cartList = document.getElementById("cart-list");
    const userId = document.getElementById("user-id").textContent;
    try {
        const response = await fetch(`http://localhost:8080/api/cart/user/${userId}`);
        if (!response.ok) throw new Error("L·ªói khi l·∫•y gi·ªè h√†ng");
        const cartData = await response.json();

        cartList.innerHTML = ""; // X√≥a n·ªôi dung c≈©

        if (cartData.length === 0) {
            cartList.innerHTML = "<li>Gi·ªè h√†ng tr·ªëng</li>";
        } else {
            cartData.forEach(item => {
                const li = document.createElement("li");
                li.classList.add("cart-item");
                li.innerHTML = `
                    <img src="/img/${item.productImage}" alt="${item.productName}" class="cart-image">
                    <div class="cart-info">
                        <h3>${item.productName}</h3>
                        <p>Gi√°: ${item.price.toLocaleString()} VND</p>
                    </div>
                    <div class="cart-actions">
                        <button onclick="down(${item.cartId}, ${item.quantity})">-</button>
                        <span>${item.quantity}</span>
                        <button onclick="up(${item.cartId}, ${item.quantity})">+</button>
                        <button onclick="deleteCartItem(${item.cartId})">üóë</button>
                    </div>
                `;
                cartList.appendChild(li); 
            });
            // Th√™m n√∫t "ƒê·∫∑t h√†ng" ·ªü cu·ªëi danh s√°ch
            const checkoutButton = document.createElement("button");
            checkoutButton.classList.add("checkout-button");
            checkoutButton.textContent = "ƒê·∫∑t h√†ng";
            checkoutButton.onclick = () => {
                window.location.href = "PayPage.html"; // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang PayPage
            };
            cartList.appendChild(checkoutButton);
        }
    } catch (error) {
        console.error(error);
    }
}


// H√†m x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
export async function deleteCartItem(cartID) {
    try {
        const response = await fetch(`http://localhost:8080/api/cart/remove/${cartID}`, {
            method: "DELETE",
        });
        if (!response.ok) throw new Error("L·ªói khi x√≥a s·∫£n ph·∫©m");
        loadCartItems(); // Load l·∫°i gi·ªè h√†ng
    } catch (error) {
        console.error(error);
    }
}
window.deleteCartItem = deleteCartItem;

// H√†m tƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
export async function up(cartID, quantity) {
    try {
        const response = await fetch(`http://localhost:8080/api/cart/update/${cartID}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({quantity: quantity + 1 }),
        });

        if (!response.ok) throw new Error("L·ªói khi tƒÉng s·ªë l∆∞·ª£ng");
        loadCartItems(); // Load l·∫°i gi·ªè h√†ng
    } catch (error) {
        console.error(error);
    }
}
window.up = up;

// H√†m gi·∫£m s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
export async function down(cartID, quantity) {
    if (quantity <= 1) {
        deleteCartItem(cartID);
        return;
    }

    try {
        const response = await fetch(`http://localhost:8080/api/cart/update/${cartID}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({quantity: quantity - 1 }),
        });

        if (!response.ok) throw new Error("L·ªói khi gi·∫£m s·ªë l∆∞·ª£ng");
        loadCartItems(); // Load l·∫°i gi·ªè h√†ng
    } catch (error) {
        console.error(error);
    }
}
window.down = down;

//Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
export async function addCart(userID, productID, quantity) {
    // T·∫°o ƒë·ªëi t∆∞·ª£ng CartRequest t·ª´ c√°c tham s·ªë ƒë·∫ßu v√†o
    const cartRequest = {
        cartID: null,
        userID: userID,
        productID: productID,
        quantity: quantity
    };
    console.log(cartRequest);

    try {
        // G·ª≠i HTTP POST request t·ªõi server
        const response = await fetch('http://localhost:8080/api/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', // ƒê·∫£m b·∫£o g·ª≠i d·ªØ li·ªáu d∆∞·ªõi d·∫°ng JSON
            },
            body: JSON.stringify(cartRequest) // Chuy·ªÉn ƒë·ªëi t∆∞·ª£ng th√†nh chu·ªói JSON
        });

        // Ki·ªÉm tra n·∫øu request th√†nh c√¥ng
        if (response.ok) {
            const data = await response.json(); // Chuy·ªÉn ph·∫£n h·ªìi t·ª´ server th√†nh ƒë·ªëi t∆∞·ª£ng JSON
            console.log('Gi·ªè h√†ng ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng:', data);
            alert("Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng th√†nh c√¥ng");
            loadCartItems();
        } else {
            // N·∫øu c√≥ l·ªói x·∫£y ra
            console.error('L·ªói khi th√™m gi·ªè h√†ng:', response.statusText);
            alert("L·ªói trong qu√° tr√¨nh th√™m s·∫£n ph·∫©m vui l√≤ng th·ª≠ l·∫°i");
        }
    } catch (error) {
        // B·∫Øt l·ªói n·∫øu c√≥ v·∫•n ƒë·ªÅ trong qu√° tr√¨nh g·ª≠i request
        console.error('C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh g·ª≠i request:', error);
    }
}





