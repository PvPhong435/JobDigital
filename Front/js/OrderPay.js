let user;
let productList;
let order;

document.addEventListener("DOMContentLoaded", function () {
    user = JSON.parse(localStorage.getItem("user"));
    LoadDuLieuHienThi();
});

async function datHang() {
    const userInfor = {
        userName: document.getElementById("hoTen").value,
        phone: document.getElementById("sdt").value,
        email: document.getElementById("Email").value,
        address: document.getElementById("DiaChi").value,
        userId: document.getElementById("user-Id").innerText
    };

    // Th√™m order m·ªõi
    try {
        addOrder();
    } catch (error) {
        console.error("L·ªói:", error);
        alert("L·ªói khi th√™m order m·ªõi")
    }

    // // T·∫°o th√¥ng tin ƒë∆°n h√†ng
    // order = {
    //     userId: userInfor.userId,
    //     orderDate: new Date().toISOString().replace("T", " ").substring(0, 19), // ƒê·ªãnh d·∫°ng th·ªùi gian chu·∫©n
    //     totalAmount: productList.reduce((sum, p) => sum + (p.price * p.quantity), 0),
    //     status: "Pending",
    //     products: productList
    // };

    // try {
    //     // G·ª≠i ƒë∆°n h√†ng l√™n Backend
    //     const response = await fetch("http://localhost:8080/api/order/create", {
    //         method: "POST",
    //         headers: { "Content-Type": "application/json" },
    //         body: JSON.stringify(order)
    //     });

    //     if (!response.ok) throw new Error("L·ªói khi t·∫°o ƒë∆°n h√†ng!");

    //     localStorage.removeItem("productList");

    //     // G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng
    //     const emailResponse = await fetch(`http://localhost:8080/api/email/send?to=${userInfor.email}&subject=ƒê∆°n h√†ng c·ªßa b·∫°n&text=ƒê∆°n h√†ng ƒë√£ ƒë·∫∑t th√†nh c√¥ng!`);
    //     if (!emailResponse.ok) throw new Error("L·ªói khi g·ª≠i email!");

    //     alert("ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t v√† email x√°c nh·∫≠n ƒë√£ g·ª≠i!");
    //     window.location.href = "Order.html"; // Chuy·ªÉn trang sau khi ƒë·∫∑t h√†ng th√†nh c√¥ng
    // } catch (error) {
    //     console.error("L·ªói:", error);
    //     alert("ƒê·∫∑t h√†ng th·∫•t b·∫°i!");
    // }
}

function LoadDuLieuHienThi() {
    // L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ localStorage
    productList = JSON.parse(localStorage.getItem("productList")) || [];
    console.log("Danh s√°ch s·∫£n ph·∫©m:", productList);

    // L·∫•y th√¥ng tin ƒë∆°n h√†ng t·ª´ localStorage
    order = JSON.parse(localStorage.getItem("order")) || null;
    console.log("Th√¥ng tin ƒë∆°n h√†ng:", order);

    if (user && user.userID !== 8) {
        document.getElementById("hoTen").value = user.fullName || "";
        document.getElementById("sdt").value = user.phone || "";
        document.getElementById("Email").value = user.email || "";
        document.getElementById("DiaChi").value = user.address || "";
        document.getElementById("user-Id").innerText = user.userID;
    }
}

async function addOrder() {
    console.log(order)
    try {
        const response = await fetch("http://localhost:8080/api/orders/addOrder", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(order),
        });
        let orderAdd;
        if (!response.ok) {
            throw new Error("Th√™m order th·∫•t b·∫°i, ƒë√£ x·∫£y ra l·ªói!");
        }
        else
        {
            const formattedProductList = productList.map(product => ({
                productId: Number(product.productId), // Chuy·ªÉn productId th√†nh s·ªë
                quantity: product.quantity,
                price: product.price
            }));
            
            console.log("üì§ D·ªØ li·ªáu g·ª≠i l√™n BE:", formattedProductList);
            
            if (formattedProductList.some(p => isNaN(p.productId))) {
                console.error("üö® L·ªói: C√≥ s·∫£n ph·∫©m b·ªã thi·∫øu ho·∫∑c sai ki·ªÉu productId!", formattedProductList);
                alert("L·ªói: C√≥ s·∫£n ph·∫©m b·ªã thi·∫øu ho·∫∑c sai ki·ªÉu productId!");
                return;
            }
            orderAdd = await response.json(); // Nh·∫≠n d·ªØ li·ªáu tr·∫£ v·ªÅ t·ª´ BE
            // G·ªçi h√†m th√™m chi ti·∫øt ƒë∆°n h√†ng
            addOrderDetail(orderAdd.orderID,formattedProductList);
        }

        

        // L∆∞u v√†o localStorage ƒë·ªÉ s·ª≠ d·ª•ng sau n√†y (n·∫øu c·∫ßn)
        localStorage.setItem("orderAdd", JSON.stringify(orderAdd));
        console.log(orderAdd);
        
    } catch (error) {
        console.error("L·ªói:", error);
        alert("C√≥ l·ªói khi ƒë·∫∑t h√†ng!");
    }
}

async function addOrderDetail(orderID, productList) {
    try {
        const response = await fetch(`http://localhost:8080/api/orders/addOrderDetail/${orderID}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(productList),
        });

        if (!response.ok) throw new Error("L·ªói khi th√™m OrderDetail!");
        else
        {
            alert("Thanh to√°n th√†nh c√¥ng");
        }

        const result = await response.json();
    } catch (error) {
        console.error("‚ùå L·ªói:", error);
        alert("L·ªói khi th√™m OrderDetail!");
    }
}


